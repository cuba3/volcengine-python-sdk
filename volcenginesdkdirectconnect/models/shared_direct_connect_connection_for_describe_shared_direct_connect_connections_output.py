# coding: utf-8

"""
    directconnect

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: common-version
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from volcenginesdkcore.configuration import Configuration


class SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'account_id': 'str',
        'bandwidth': 'int',
        'creation_time': 'str',
        'description': 'str',
        'direct_connect_access_point_id': 'str',
        'line_operator': 'str',
        'parent_connection_id': 'str',
        'port_type': 'str',
        'shared_direct_connect_connection_id': 'str',
        'shared_direct_connect_connection_name': 'str',
        'status': 'str',
        'update_time': 'str',
        'user_account_id': 'str',
        'vlan_id': 'int'
    }

    attribute_map = {
        'account_id': 'AccountId',
        'bandwidth': 'Bandwidth',
        'creation_time': 'CreationTime',
        'description': 'Description',
        'direct_connect_access_point_id': 'DirectConnectAccessPointId',
        'line_operator': 'LineOperator',
        'parent_connection_id': 'ParentConnectionId',
        'port_type': 'PortType',
        'shared_direct_connect_connection_id': 'SharedDirectConnectConnectionId',
        'shared_direct_connect_connection_name': 'SharedDirectConnectConnectionName',
        'status': 'Status',
        'update_time': 'UpdateTime',
        'user_account_id': 'UserAccountId',
        'vlan_id': 'VlanId'
    }

    def __init__(self, account_id=None, bandwidth=None, creation_time=None, description=None, direct_connect_access_point_id=None, line_operator=None, parent_connection_id=None, port_type=None, shared_direct_connect_connection_id=None, shared_direct_connect_connection_name=None, status=None, update_time=None, user_account_id=None, vlan_id=None, _configuration=None):  # noqa: E501
        """SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._account_id = None
        self._bandwidth = None
        self._creation_time = None
        self._description = None
        self._direct_connect_access_point_id = None
        self._line_operator = None
        self._parent_connection_id = None
        self._port_type = None
        self._shared_direct_connect_connection_id = None
        self._shared_direct_connect_connection_name = None
        self._status = None
        self._update_time = None
        self._user_account_id = None
        self._vlan_id = None
        self.discriminator = None

        if account_id is not None:
            self.account_id = account_id
        if bandwidth is not None:
            self.bandwidth = bandwidth
        if creation_time is not None:
            self.creation_time = creation_time
        if description is not None:
            self.description = description
        if direct_connect_access_point_id is not None:
            self.direct_connect_access_point_id = direct_connect_access_point_id
        if line_operator is not None:
            self.line_operator = line_operator
        if parent_connection_id is not None:
            self.parent_connection_id = parent_connection_id
        if port_type is not None:
            self.port_type = port_type
        if shared_direct_connect_connection_id is not None:
            self.shared_direct_connect_connection_id = shared_direct_connect_connection_id
        if shared_direct_connect_connection_name is not None:
            self.shared_direct_connect_connection_name = shared_direct_connect_connection_name
        if status is not None:
            self.status = status
        if update_time is not None:
            self.update_time = update_time
        if user_account_id is not None:
            self.user_account_id = user_account_id
        if vlan_id is not None:
            self.vlan_id = vlan_id

    @property
    def account_id(self):
        """Gets the account_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501


        :return: The account_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.


        :param account_id: The account_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :type: str
        """

        self._account_id = account_id

    @property
    def bandwidth(self):
        """Gets the bandwidth of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501


        :return: The bandwidth of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :rtype: int
        """
        return self._bandwidth

    @bandwidth.setter
    def bandwidth(self, bandwidth):
        """Sets the bandwidth of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.


        :param bandwidth: The bandwidth of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :type: int
        """

        self._bandwidth = bandwidth

    @property
    def creation_time(self):
        """Gets the creation_time of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501


        :return: The creation_time of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :rtype: str
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.


        :param creation_time: The creation_time of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :type: str
        """

        self._creation_time = creation_time

    @property
    def description(self):
        """Gets the description of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501


        :return: The description of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.


        :param description: The description of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def direct_connect_access_point_id(self):
        """Gets the direct_connect_access_point_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501


        :return: The direct_connect_access_point_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :rtype: str
        """
        return self._direct_connect_access_point_id

    @direct_connect_access_point_id.setter
    def direct_connect_access_point_id(self, direct_connect_access_point_id):
        """Sets the direct_connect_access_point_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.


        :param direct_connect_access_point_id: The direct_connect_access_point_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :type: str
        """

        self._direct_connect_access_point_id = direct_connect_access_point_id

    @property
    def line_operator(self):
        """Gets the line_operator of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501


        :return: The line_operator of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :rtype: str
        """
        return self._line_operator

    @line_operator.setter
    def line_operator(self, line_operator):
        """Sets the line_operator of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.


        :param line_operator: The line_operator of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :type: str
        """

        self._line_operator = line_operator

    @property
    def parent_connection_id(self):
        """Gets the parent_connection_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501


        :return: The parent_connection_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :rtype: str
        """
        return self._parent_connection_id

    @parent_connection_id.setter
    def parent_connection_id(self, parent_connection_id):
        """Sets the parent_connection_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.


        :param parent_connection_id: The parent_connection_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :type: str
        """

        self._parent_connection_id = parent_connection_id

    @property
    def port_type(self):
        """Gets the port_type of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501


        :return: The port_type of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :rtype: str
        """
        return self._port_type

    @port_type.setter
    def port_type(self, port_type):
        """Sets the port_type of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.


        :param port_type: The port_type of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :type: str
        """

        self._port_type = port_type

    @property
    def shared_direct_connect_connection_id(self):
        """Gets the shared_direct_connect_connection_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501


        :return: The shared_direct_connect_connection_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :rtype: str
        """
        return self._shared_direct_connect_connection_id

    @shared_direct_connect_connection_id.setter
    def shared_direct_connect_connection_id(self, shared_direct_connect_connection_id):
        """Sets the shared_direct_connect_connection_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.


        :param shared_direct_connect_connection_id: The shared_direct_connect_connection_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :type: str
        """

        self._shared_direct_connect_connection_id = shared_direct_connect_connection_id

    @property
    def shared_direct_connect_connection_name(self):
        """Gets the shared_direct_connect_connection_name of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501


        :return: The shared_direct_connect_connection_name of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :rtype: str
        """
        return self._shared_direct_connect_connection_name

    @shared_direct_connect_connection_name.setter
    def shared_direct_connect_connection_name(self, shared_direct_connect_connection_name):
        """Sets the shared_direct_connect_connection_name of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.


        :param shared_direct_connect_connection_name: The shared_direct_connect_connection_name of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :type: str
        """

        self._shared_direct_connect_connection_name = shared_direct_connect_connection_name

    @property
    def status(self):
        """Gets the status of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501


        :return: The status of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.


        :param status: The status of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def update_time(self):
        """Gets the update_time of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501


        :return: The update_time of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.


        :param update_time: The update_time of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :type: str
        """

        self._update_time = update_time

    @property
    def user_account_id(self):
        """Gets the user_account_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501


        :return: The user_account_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :rtype: str
        """
        return self._user_account_id

    @user_account_id.setter
    def user_account_id(self, user_account_id):
        """Sets the user_account_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.


        :param user_account_id: The user_account_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :type: str
        """

        self._user_account_id = user_account_id

    @property
    def vlan_id(self):
        """Gets the vlan_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501


        :return: The vlan_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :rtype: int
        """
        return self._vlan_id

    @vlan_id.setter
    def vlan_id(self, vlan_id):
        """Sets the vlan_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.


        :param vlan_id: The vlan_id of this SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput.  # noqa: E501
        :type: int
        """

        self._vlan_id = vlan_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, SharedDirectConnectConnectionForDescribeSharedDirectConnectConnectionsOutput):
            return True

        return self.to_dict() != other.to_dict()
